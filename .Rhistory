colnames(df.wide) %>% length()
df.wide <-  df %>% pivot_wider(names_from = type,
values_from = count) %>%
mutate_at(.vars = colnames(.),
.funs =replace_na,0)
View(df.wide)
df.wide <-  df %>% pivot_wider(names_from = type,
values_from = count)
View(df.wide)
df.long <- df.wide %>%
pivot_longer(cols = c("a","b","c","d"),
names_to = "type",
values_to = "count",
values_drop_na = T)
View(df.long)
rm(list=ls())
graphics.off()
library("tidyverse")
df <- data.frame(id =  1:6,
type = c("a","b","c","b","b","d"),
count = seq(10,60,10))
df.wide <-  df %>% pivot_wider(names_from = type,
values_from = count)
df.long <- df.wide %>%
pivot_longer(cols = c("a","b","c","d"),
names_to = "type",
values_to = "count",
values_drop_na = T)
dates <- seq.Date(from = today(),
to = "2024-12-31",
by = "day")
dates <- seq.Date(from = "2024-12-1",
to = "2024-12-31",
by = "day")
dates <- seq.Date(from = today(),
to = as.Date("2024-12-31"),
by = "day")
dates
dates %>%
as.tibble()
dates.df <- dates %>%
as.tibble()
View(dates.df)
dates.df <- dates.df %>%
mutate(day = day(value),
week = week(value),
month = month(value),
year = year(value)
)
View(dates.df)
dates.df <- dates.df %>%
mutate(day = day(value),
week = week(value),
month = month(value),
year = year(value),
d_m_y = paste0(day,month,year)
)
View(dates.df)
summary(dates.df)
dates.df <- dates.df %>%
mutate(day = day(value),
week = week(value),
month = month(value),
year = year(value),
d_m_y = paste0(day,month,year),
d_m_y = as.numeric(d_m_y)
)
summary(dates.df)
dates.df <- dates.df %>%
mutate(day = day(value),
week = week(value),
month = month(value),
year = year(value),
d_m_y = paste0(day,month,year),
d_m_y = as.numeric(d_m_y),
rank = dense_rank(d_m_y)
)
View(dates.df)
now()
today()
isoyear("2021-12-31 13:30:40")
d1 <- as_date("2021-12-31")
d <- today()
floor_date(d,"month")
d
ceiling_date(d,"day")
rollback(d)
data <- nycflights13::flights
as.duration(1234)
ddays(12)
today() + ddays(1)
now() +dmonths(1)
birthday <- make_date(1990,11,22)
int <- interval(birthday,today())
int
is.interval(int)
birthday %~% today()
birthday %within% interval(birthday,today())
birthday
today() + days(1:5)
days(30)
days(30) / days(15)
ddays(30)
ddays(30) %>% class()
days(30) %>% class()
ddays(30)
days(30)
ddays(30) + days(30)
ddays(30) + today()
days(30)
days(30) + today()
dates <- c("2024-11-01", "2024-12-25", "2025-01-15")
as_date(dates)
as_date(dates) %>% class()
month(dates)
my_date <- as.Date("2024-11-23")
my_date + days(45)
my_date + days(45) - months(2)
ddays(20)
ddays(20) / 3
ddays(20) / days(10)
ddays(20) - days(10)
days(145)
days(145) / days(30)
days(145) / days(30) %>%
period_to_seconds()
days(145) %>%
period_to_seconds()
onths(2)
months(2)
months(2)
months(2) - today()
today()
months(2) - days(20)
months(2) - days(20)
(months(2) - days(20)) / days(1)
mtcars
mtcars %>%
ggplot(aes(x = wt,
y = hp)) +
geom_point()
mtcars %>%
ggplot(aes(x = wt,
y = hp)) +
geom_point() +
geom_smooth()
mtcars %>%
ggplot(aes(x = wt,
y = hp,
color = carb)) +
geom_point() +
geom_smooth()
mtcars %>%
ggplot(aes(x = wt,
y = hp,
color = carb)) +
geom_jitter()
mtcars %>%
ggplot(aes(x = wt,
y = hp,
color = carb)) +
geom_point() +
geom_smooth()
mtcars %>%
ggplot(aes(x = wt,
y = hp,
color = carb)) +
geom_point() +
geom_smooth(method = "lm")
USArrests
df.arrest <- USArrests %>%
mutate(region = rownames(.))
View(df.arrest)
df.arrest <- df.arrest %>%
left_join(x = .,
y = map_data("state"),
by = "region")
View(df.arrest)
install.packages("maps")
library("maps")
df.arrest <- df.arrest %>%
left_join(x = .,
y = map_data("state"),
by = "region")
View(df.arrest)
n <- 10
for(i in 1:n){
print(paste0(i,"outer"))
for(j in 1:n){
print(paste0(i,"inner"))
}
}
for(i in 1:n){
print(paste0(i,"outer"))
for(j in 1:n){
print(paste0(j,"inner"))
}
}
patient_data <- data.frame(
id = 1:1000,
age = rnorm(n = 1000,mean = 60,sd = 10),
drug = sample(c("intervention","soc"),size = 1000,replace = T,prob = c(0.5,0.5)),
visit_date = seq.Date(from = as.Date("2020-01-01"),by = "day",length.out = 1000)
)
View(patient_data)
patient_data <- data.frame(
id = 1:1000,
age = round(rnorm(n = 1000,mean = 60,sd = 10),0),
drug = sample(c("intervention","soc"),size = 1000,replace = T,prob = c(0.5,0.5)),
visit_date = seq.Date(from = as.Date("2020-01-01"),by = "day",length.out = 1000)
)
View(patient_data)
attach(patient_data)
attach(patient_data)
attach(patient_data)
id
age
hist(age)
hist(drug)
table(drug)
visit_data <- data.frame(
patient_id = sample(patient_data$id,10000,replace = T),
visit_date = sample(patient_data$visit_date,10000,replace = T),
visit_type = sample(c("routine","emergency","follow-up"),10000,replace = T),
visit_drug = sample(patient_data$drug,10000,replace = T)
)
View(visit_data)
visit_data %>%
filter(patient_id == 1)
library("tidyverse")
visit_data %>%
filter(patient_id == 1)
visit_data %>%
filter(patient_id == 2)
test_df <- patient_data %>%
left_join(x = .,
y = visit_date,
key = c("id"="patient_id"))
View(patient_data)
test_df <- patient_data %>%
left_join(x = .,
y = visit_date,
key = "id")
test_df <- patient_data %>%
left_join(x = .,
y = visit_date,
key = c("id"="patient_id"))
View(patient_data)
test_df <- patient_data %>%
left_join(x = .,
y = visit_date %>% rename(id = patient_id),
key = "id")
test_df <- patient_data %>%
left_join(x = .,
y = visit_date %>% rename(id = patient_id),
by = "id")
test_df <- patient_data %>%
left_join(x = .,
y = visit_date,
by = c("id"="patient_id"))
test_df <- patient_data %>%
left_join(x = .,
y = visit_data,
by = c("id"="patient_id"))
View(test_df)
test_df %>%
group_by(id) %>%
nest()
test.df <- test_df %>%
group_by(id) %>%
nest()
View(test.df)
View(test.df[[2]][[1]])
test.df <- test_df %>%
arrange(desc(visit_date.y)) %>%
group_by(id) %>%
nest()
View(test.df)
View(test.df[[2]][[1]])
test.df <- test_df %>%
arrange(visit_date.y) %>%
group_by(id) %>%
nest()
View(test.df)
View(test.df[[2]][[1]])
test_df %>%
group_by(visit_type,visit_drug)
test_df %>%
group_by(visit_type,visit_drug) %>%
summarise(su = n())
test_df %>%
group_by(visit_type,visit_drug) %>%
summarise(count = n())
unique(test_df$visit_type)
print(i)
for(i in unique(test_df$visit_type)){
print(i)
}
count <- sum(test_df$visit_type == "emergency" & test_df$visit_drug == "intervention")
test_df %>%
group_by(visit_type,visit_drug) %>%
summarise(count = n()) %>%
arrange(visit_type)
test_df[1<]
test_df[1,]
test_df %>%
group_by(visit_type,visit_drug) %>%
summarise(count = n()) %>%
arrange(visit_type)
n<-1000
patient_id<-1:n
age<-round(runif(n,min=18,max = 90))
sex<-sample(c("male","female"),size = n,replace = T)
race<-sample(c("White","Black","Asian","other"),size = n,replace = T)
systolic<-round(rnorm(n,mean = 120,sd=20))
diastolic<-round(rnorm(n,mean=80,sd=10))
weight<-round(rnorm(n,mean = 70,sd=20))
height<-round(rnorm(n,mean=1.66,sd=0.22))
creatinine<-(rnorm(n,mean=1.66,sd=0.22))
patient_data<-data.frame(patient_id,age,sex,race,systolic,diastolic,weight,height,creatinine)
View(patient_data)
creatinine<-round(rnorm(n,mean=1.66,sd=0.22),1)
patient_data<-data.frame(patient_id,age,sex,race,systolic,diastolic,weight,height,creatinine)
View(patient_data)
for(i in 1:nrow(patient_data)){
if(patient_data[i,"systolic"] <= 120 & patient_data[i,"diastolic"] <= 80){
patient_data[i,"blood_pressure"] <- "normal"
} else if(patient_data[i,"systolic"] <= 140 & patient_data[i,"diastolic"] <= 90){
patient_data[i,"blood_pressure"] <- "prehypertensive"
} else {
patient_data[i,"blood_pressure"] <- "hypertensive"
}
}
View(patient_data)
for(i in 1:nrow(patient_data)){
if(patient_data[i,"systolic"] <= 120 & patient_data[i,"diastolic"] <= 80){
patient_data[i,"blood_pressure"] <- "normal"
} else if(patient_data[i,"systolic"] < 140 & patient_data[i,"diastolic"] < 90){
patient_data[i,"blood_pressure"] <- "prehypertensive"
} else {
patient_data[i,"blood_pressure"] <- "hypertensive"
}
}
View(patient_data)
patient_data[,"systolic"== 140]
patient_data %>%
filter(systolic == 140)
patient_data %>%
filter(systolic == 139)
patient_data <- patient_data %>%
mutate(eGFR = case_when(race == "black" & sex == "female" ~ 175 * (creatinine^-1.154) * (age^-0.303) * 0.742 * 1.1212,
sex == "female" ~ 175 * (creatinine^-1.154) * (age^-0.303) * 0.742,
T ~ 175 * (creatinine^-1.154) * (age^-0.303)))
View(patient_data)
min(1.2/0.7)^-0.329
min(1.2/0.7)^-0.329
min(1.2/0.7,1)^-0.329
patient_data <- patient_data %>%
mutate(eGFR = case_when(race == "black" & sex == "female" ~ 141 * min(creatinine/0.7,1)^-0.329 * max(creatinine/0.7,1)^-1.209 * (0.993^age) * 1.018 * 1.159,
race == "black" & sex == "male" ~ 141 * min(creatinine/0.9,1)^-0.411 * max(creatinine/0.9,1)^-1.209 * (0.993^age) * 1.159,
sex == "female" ~  141 * min(creatinine/0.7,1)^-0.329 * max(creatinine/0.7,1)^-1.209 * (0.993^age) * 1.018,
T ~ 141 * min(creatinine/0.9,1)^-0.411 * max(creatinine/0.9,1)^-1.209 * (0.993^age)))
View(patient_data)
patient_data <- patient_data %>%
mutate(kidney_status = case_when(eGFR >= 90 ~ "Normal",
eGFR >= 60 ~ "Mild Kidney Damage",
eGFR < 60 & eGFR >= 15 ~ "Chronic Kidney Disease",
eGFR < 15 ~ "Kidney Failure"))
View(patient_data)
patient_data %>%
filter(eGFR == "Normal")
patient_data %>%
filter(eGFR == "Mild Kidney Damage")
patient_data %>%
filter(eGFR == "Kidney Failure")
patient_data %>%
filter(kidney_status == "Normal")
patient_data %>%
filter(kidney_status == "Mild Kidney Damage")
patient_data %>%
filter(kidney_status == "Kidney Failure")
patient_data %>%
filter(eGFR > 40)
patient_data %>%
filter(eGFR > 30)
141 * min(0.9/0.9,1)^-0.411 * max(0.9/0.9,1)^-1.209 * (0.993^34)
141 * min(0.9/0.9,1)^-0.411 * max(0.9/0.9,1)^-1.209 * (0.993^35)
patient_data %>%
filter(eGFR > 40)
patient_data %>%
filter(eGFR <25)
patient_data %>%
filter(eGFR <20)
patient_data %>%
filter(eGFR <16)
patient_data %>%
filter(eGFR <17)
patient_data %>%
filter(eGFR <18)
summary(patient_data$eGFR)
rm(list=ls())
graphics.off()
library("tidyverse")
rm(list=ls())
graphics.off()
library("tidyverse")
list.files("./")
list.files("./",recursive = T)
list.files("./data/csse_covid_19_daily_reports_us/")
daily.cases.df <- list.files("./data/csse_covid_19_daily_reports_us/")
daily.cases.df <- list.files("./data/csse_covid_19_daily_reports_us/") %>%
as.tibble()
daily.cases.df <- list.files("./data/csse_covid_19_daily_reports_us/") %>%
as_tibble()
View(daily.cases.df)
View(daily.cases.df)
directory <- "./data/csse_covid_19_daily_reports_us/"
daily.cases.df <- list.files("./data/csse_covid_19_daily_reports_us/") %>%
as_tibble() %>%
mutate(full_path = paste0(directory,value))
View(daily.cases.df)
daily.cases.df <- list.files("./data/csse_covid_19_daily_reports_us/") %>%
as_tibble() %>%
mutate(full_path = paste0(directory,value)) %>%
mutate(content = map(.,
.f = ~read_csv))
daily.cases.df <- list.files("./data/csse_covid_19_daily_reports_us/") %>%
as_tibble() %>%
mutate(full_path = paste0(directory,value)) %>%
mutate(content = map(.x = full_path,
.f = ~read_csv(.)))
View(daily.cases.df)
View(daily.cases.df[[3]][[1]])
daily.cases.df <- list.files("./data/csse_covid_19_daily_reports_us/") %>%
as_tibble() %>%
mutate(full_path = paste0(directory,value)) %>%
mutate(content = map(.x = full_path,
.f = ~read_csv(.))) %>%
pull(content) %>%
bind_rows(.)
View(daily.cases.df)
install.packages("janitor")
library("janitor")
daily.cases.df <- clean_names(daily.cases.df)
View(daily.cases.df)
summary(daily.cases.df)
library("rio")
install.packages("rio")
library("rio")
GDP_data <- rio::import(file = "./GDP_USA_states.xlsx",
sheet = "clean data")
getwd()
GDP_data <- rio::import(file = "./data/GDP_USA_states.xlsx",
sheet = "clean data")
View(GDP_data)
GDP_data <- rio::import(file = "./data/GDP_USA_states.xlsx",
sheet = "clean data") %>%
clean_names()
library("tidyverse")
GDP_data <- rio::import(file = "./data/GDP_USA_states.xlsx",
sheet = "clean data") %>%
clean_names()
library("janitor")
GDP_data <- rio::import(file = "./data/GDP_USA_states.xlsx",
sheet = "clean data") %>%
clean_names()
View(GDP_data)
GPD_data
GDP_data
GPD_data <- GPD_data %>%
select(state = state_or_territory,
gdp_nominal = nominal_gdp_2020,
gdp_per_capita)
GDP_data <- rio::import(file = "./data/GDP_USA_states.xlsx",
sheet = "clean data") %>%
clean_names()
GPD_data <- GPD_data %>%
select(state = state_or_territory,
gdp_nominal = nominal_gdp_2020,
gdp_per_capita)
GDP_data <- rio::import(file = "./data/GDP_USA_states.xlsx",
sheet = "clean data")
GPD_data <- GPD_data %>%
clean_names() %>%
select(state = state_or_territory,
gdp_nominal = nominal_gdp_2020,
gdp_per_capita)
GPD_data %>%
clean_names() %>%
select(state = state_or_territory,
gdp_nominal = nominal_gdp_2020,
gdp_per_capita)
library("rio")
GPD_data <- GPD_data %>%
clean_names() %>%
select(state = state_or_territory,
gdp_nominal = nominal_gdp_2020,
gdp_per_capita)
View(GDP_data)
GPD_data %>%
clean_names()
GDP_data <- rio::import(file = "./data/GDP_USA_states.xlsx",
sheet = "clean data")
GDP_data <- rio::import(file = "./data/GDP_USA_states.xlsx",
sheet = "clean data")
GPD_data <- GPD_data %>%
clean_names() %>%
select(state = state_or_territory,
gdp_nominal = nominal_gdp_2020,
gdp_per_capita)
GPD_data
library("rio")
